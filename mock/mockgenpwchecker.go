// Code generated by MockGen. DO NOT EDIT.
// Source: C:\Users\mario\go\pkg\ProjectStudioSol\interfaces\passwordcheckerInterface.go

// Package mock_interfaces is a generated GoMock package.
package mock_interfaces

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	structJson "github.com/mariojose123/PasswordCheckJsonAPI/internal/structJson"
)

// MockPWChecker is a mock of PWChecker interface.
type MockPWChecker struct {
	ctrl     *gomock.Controller
	recorder *MockPWCheckerMockRecorder
}

// MockPWCheckerMockRecorder is the mock recorder for MockPWChecker.
type MockPWCheckerMockRecorder struct {
	mock *MockPWChecker
}

// NewMockPWChecker creates a new mock instance.
func NewMockPWChecker(ctrl *gomock.Controller) *MockPWChecker {
	mock := &MockPWChecker{ctrl: ctrl}
	mock.recorder = &MockPWCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPWChecker) EXPECT() *MockPWCheckerMockRecorder {
	return m.recorder
}

// AddMatch mocks base method.
func (m *MockPWChecker) AddMatch(jsonStruct structJson.PSReceiveStructure, noMatch []string) []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddMatch", jsonStruct, noMatch)
	ret0, _ := ret[0].([]string)
	return ret0
}

// AddMatch indicates an expected call of AddMatch.
func (mr *MockPWCheckerMockRecorder) AddMatch(jsonStruct, noMatch interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddMatch", reflect.TypeOf((*MockPWChecker)(nil).AddMatch), jsonStruct, noMatch)
}
